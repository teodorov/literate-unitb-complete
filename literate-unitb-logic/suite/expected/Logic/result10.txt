(set-option :auto-config false)
(set-option :smt.timeout 3000)
(declare-datatypes (a) ( (Maybe (Just (fromJust a)) Nothing) ))
(declare-datatypes () ( (Null null) ))
(declare-datatypes (a b) ( (Pair (pair (first a) (second b))) ))
(declare-datatypes (a1 a2)
                   ( (Record-b-x (Record-b-x (@@field@@_b a1) (@@field@@_x a2))) ))
(define-sort guarded (a) (Maybe a))
; comment: we don't need to declare the sort Bool
; comment: we don't need to declare the sort Int
; comment: we don't need to declare the sort Real
(define-sort set (a) (Array a Bool))
(declare-const v1 (Record-b-x Bool Int))
(declare-const v2 (Record-b-x Bool Int))
; v1: x:=7, b:=true
(assert (= v1 (Record-b-x true 7)))
; v2: v1[x:=7]
(assert (= v2 (Record-b-x (@@field@@_b v1) 7)))
(assert (not (= v1 v2)))
(check-sat-using (or-else (then qe smt)
                          (then simplify smt)
                          (then skip smt)
                          (then (using-params simplify :expand-power true) smt)))