-- Initial literate-unitb-config.cabal generated by cabal init.  For 
-- further documentation, see http://haskell.org/cabal/users-guide/

name:                literate-unitb-config
version:             0.1.0.0
synopsis:            Reading and writing Literate Unit-B configuration files
description:         Reading and writing Literate Unit-B configuration files
license:             MIT
license-file:        LICENSE
author:              Simon Hudon
maintainer:          simon.hudon@gmail.com
-- copyright:           
category:            Configuration
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.10

source-repository head
  type:     git
  location: https://github.com/unitb/literate-unitb-config

library
  exposed-modules:     Z3.Version, Data.Bidirectional, Utilities.Config
  -- other-modules:       
  default-extensions:    LambdaCase, QuasiQuotes, TupleSections, FlexibleInstances, DeriveFunctor, RankNTypes, TemplateHaskell, DeriveGeneric
  build-depends:       base >=4.7 && <5, lens >=4.12 && <4.16, transformers >=0.4 && <0.6, MissingH >=1.3 && <1.5, aeson, yaml >=0.8.16, directory >=1.2 && <1.4, filepath >=1.4 && <1.5, process >=1.2 && <1.6, control-invariants, th-printf, containers, either, deepseq, pretty-printable
  hs-source-dirs:      .
  default-language:    Haskell2010

executable unitb-config
  -- .hs or .lhs file containing the Main module.
  main-is:  Options.hs
  hs-source-dirs: app
  default-language:    Haskell2010

    -- literate-unitb-scripts, 
  build-depends:       base >=4.7 && < 5, directory >= 1.2.2.0, literate-unitb-config, optparse-applicative, lens, deepseq, yaml, bytestring

  ghc-options: -W -fwarn-missing-signatures 
         -fwarn-incomplete-uni-patterns
         -fwarn-missing-methods
         -threaded  -fno-ignore-asserts
         -fwarn-tabs
         -j8
  
  -- LANGUAGE extensions used by modules in this package.
  default-extensions:  TupleSections, DeriveFunctor, DeriveGeneric, DeriveFoldable, RankNTypes, MultiParamTypeClasses, GeneralizedNewtypeDeriving, TemplateHaskell, FlexibleContexts, FlexibleInstances, DeriveDataTypeable, TypeSynonymInstances, DefaultSignatures, DeriveTraversable, FunctionalDependencies, ImplicitParams, QuasiQuotes
