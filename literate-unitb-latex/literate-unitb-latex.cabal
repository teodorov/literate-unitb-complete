-- Initial literate-unitb-latex.cabal generated by cabal init.  For further
--  documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                literate-unitb-latex

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.1.0.0

-- A short (one-line) description of the package.
synopsis:            LaTeX modules for Literate Unit-B

-- A longer description of the package.
description:         Parsing LaTeX and generating LaTeX syntax tree.

-- The license under which the package is released.
license:             MIT

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Simon Hudon

-- An email address to which users can send suggestions, bug reports, and 
-- patches.
maintainer:          simon@cse.yorku.ca

-- A copyright notice.
-- copyright:           

category:            Development

build-type:          Simple

-- Extra files to be distributed with the package, such as examples or a 
-- README.
-- extra-source-files:  

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >=1.10

source-repository head
  type:     git
  location: https://github.com/unitb/literate-unitb-latex

library
  -- Modules exported by the library.
  exposed-modules:
        Latex.Monad
        -- Latex.OldMonad
        Latex.Parser
        Latex.Scanner
        -- TEST CASES
        -- Latex.Test
        -- Utilities.Syntactic
  
  -- Modules included in this library but not exported.
  -- other-modules:       
  
  -- LANGUAGE extensions used by modules in this package.
  default-extensions:    TypeFamilies, TemplateHaskell, QuasiQuotes, DeriveGeneric, FlexibleInstances, TypeSynonymInstances, MultiParamTypeClasses, FlexibleContexts, RankNTypes, DeriveFunctor, GeneralizedNewtypeDeriving, DeriveFoldable, DeriveTraversable, OverloadedStrings

  ghc-options: -W -fwarn-missing-signatures
         -fwarn-incomplete-uni-patterns
         -fwarn-missing-methods
         -fno-ignore-asserts
         -fwarn-tabs
         -j8
  
  -- Other library packages from which modules are imported.
  build-depends:       base >= 4.8 && < 5, lens, mtl, semigroups, safe, deepseq, transformers >= 0.3, either, containers, directory, filepath, parsec, QuickCheck, control-invariants, th-printf, axiomatic-classes, string-lenses, show-with, unitb-testing, generic-instances, pretty-printable, cereal, data-ordlist, syntax-error, quickcheck-report, text, mono-traversable, quickcheck-text
  
  -- Directories containing source files.
  hs-source-dirs:      .
  
  -- Base language which the package is written in.
  default-language:    Haskell2010

test-suite test
   ghc-options: -W -fwarn-missing-signatures 
         -fwarn-incomplete-uni-patterns
         -fwarn-missing-methods
         -threaded  -fno-ignore-asserts
         -fwarn-tabs
         -j8
   type: exitcode-stdio-1.0
   hs-source-dirs: suite
   default-language:    Haskell2010
   main-is: test.hs
   build-depends:       base >= 4.8 && < 5,
                        shelly, directory >= 1.2.2.0, 
                        literate-unitb-latex,
                        syntax-error,
                        show-with,
                        th-printf,
                        quickcheck-report,
                        axiomatic-classes,
                        QuickCheck,
                        unitb-testing,
                        generic-instances,
                        text, quickcheck-text,
                        containers, mtl,
                        either, lens,
                        process
   default-language:    Haskell2010
   default-extensions:  TypeFamilies, TemplateHaskell, QuasiQuotes, DeriveGeneric, FlexibleInstances, TypeSynonymInstances, MultiParamTypeClasses, FlexibleContexts, RankNTypes, DeriveFunctor, GeneralizedNewtypeDeriving, DeriveFoldable, DeriveTraversable, OverloadedStrings
