 sort: Pair [a,b], guarded [a], set [a]
 card[_a]: (set a) -> Int
 const[_a,_b]: b -> (Array a b)
 finite[_t]: (set t) -> Bool
 ident[_a]: (Array a a)
 is-def[_a]: (guarded a) -> Bool
 mk-set[_t]: t -> (set t)
 pow[_a]: (set a) -> (set (set a))
 qsum[_a]: (set a) x (Array a Int) -> Int
 qunion[_a,_b]: (set a) x (Array a (set b)) -> (set b)
 set[_a,_b]: (set a) x (Array a b) -> (set b)
 t_{param}[]: Int
 all[_t] : (set t)  =  ((as const (set t)) true)
 compl[_t] : (s1 (set _t)) -> (set t)  =  ((_ map not) s1)
 elem[_t] : (x _t) x (s1 (set _t)) -> Bool  =  (select s1 x)
 empty-set[_t] : (set t)  =  ((as const (set t)) false)
 set-diff[_t] : (s1 (set _t)) x (s2 (set _t)) -> (set t)  =  (intersect s1 ((_ map not) s2))
 st-subset[_t] : (s1 (set _t)) x (s2 (set _t)) -> Bool  =  (and (subset s1 s2) (not (= s1 s2)))
 st: (Array Int Bool)
 st': (Array Int Bool)
 t: Int
 A0:  (= st' (store st t_{param} false))
 C0:  (select st t_{param})
 J0:  (forall ( (t Int) )
              (=> true (= (store st t false) (store st t false))))
 (forall ( (term (Array _t Int)) )
         (=> true (= (qsum@@_t empty-set@@_t term) 0)))
 (forall ( (r (set _t))
           (term (Array _t Int))
           (x _t) )
         (=> true
             (=> (not (elem@@_t x r))
                 (= (qsum@@_t (union r (mk-set@@_t x)) term)
                    (+ (qsum@@_t r term) (select term x))))))
 (forall ( (r (set _t))
           (r0 (set _t))
           (term (Array _t Int)) )
         (=> true
             (=> (= (intersect r r0) empty-set@@_t)
                 (= (qsum@@_t (union r r0) term)
                    (+ (qsum@@_t r term) (qsum@@_t r0 term))))))
 (forall ( (r (set _t)) )
         (=> true (=> (finite@@_t r) (<= 0 (card@@_t r)))))
 (forall ( (r (set _t)) )
         (=> true (= (= (card@@_t r) 0) (= r empty-set@@_t))))
 (forall ( (x _t) )
         (=> true (= (card@@_t (mk-set@@_t x)) 1)))
 (forall ( (r (set _t)) )
         (=> true
             (= (= (card@@_t r) 1)
                (exists ( (x _t) ) (and true (= r (mk-set@@_t x)))))))
 (forall ( (r (set _t))
           (r0 (set _t)) )
         (=> true
             (=> (= (intersect r r0) empty-set@@_t)
                 (= (card@@_t (union r r0))
                    (+ (card@@_t r) (card@@_t r0))))))
 (forall ( (r (set _t)) )
         (=> true
             (= (card@@_t r) (qsum@@_t r (const@@_t@@Int 1)))))
 (forall ( (x _t0)
           (y _t1) )
         (=> true (= (select (const@@_t1@@_t0 x) y) x)))
 (forall ( (x _t0) ) (=> true (= (select ident@@_t0 x) x)))
 (forall ( (x _t0) ) (=> true (is-def@@_t0 (Just x))))
 (forall ( (x _t)
           (y _t) )
         (=> true (= (elem@@_t x (mk-set@@_t y)) (= x y))))
 (forall ( (r1 (set _t0))
           (term (Array _t0 _t))
           (y _t) )
         (=> true
             (= (elem@@_t y (set@@_t0@@_t r1 term))
                (exists ( (x _t0) )
                        (and (elem@@_t0 x r1) (= (select term x) y))))))
 (forall ( (r1 (set _t0))
           (term (Array _t0 _t))
           (y _t) )
         (=> true
             (= (= (set@@_t0@@_t r1 term) (mk-set@@_t y))
                (forall ( (x _t0) )
                        (=> (elem@@_t0 x r1) (= (select term x) y))))))
 (forall ( (s1 (set _t))
           (s2 (set _t)) )
         (=> true
             (=> (finite@@_t s1) (finite@@_t (set-diff@@_t s1 s2)))))
 (forall ( (s1 (set _t))
           (s2 (set _t)) )
         (=> true
             (=> (and (finite@@_t s1) (finite@@_t s2))
                 (finite@@_t (union s1 s2)))))
 (forall ( (s1 (set _t))
           (s2 (set _t)) )
         (=> true
             (=> (and (finite@@_t s2) (not (finite@@_t s1)))
                 (not (finite@@_t (set-diff@@_t s1 s2))))))
 (forall ( (x _t) ) (=> true (finite@@_t (mk-set@@_t x))))
 (finite@@_t empty-set@@_t)
 (forall ( (r1 (set _t0)) )
         (=> true (= (set@@_t0@@_t0 r1 ident@@_t0) r1)))
 (forall ( (terms (Array _t0 (set _t))) )
         (=> true
             (= (qunion@@_t0@@_t empty-set@@_t0 terms)
                empty-set@@_t)))
 (forall ( (terms (Array _t0 (set _t)))
           (x _t0) )
         (=> true
             (= (qunion@@_t0@@_t (mk-set@@_t0 x) terms)
                (select terms x))))
 (forall ( (r1 (set _t0))
           (r2 (set _t0))
           (terms (Array _t0 (set _t))) )
         (=> true
             (= (qunion@@_t0@@_t (union r1 r2) terms)
                (union (qunion@@_t0@@_t r1 terms)
                       (qunion@@_t0@@_t r2 terms)))))
 (forall ( (r1 (set _t0))
           (terms (Array _t0 (set _t)))
           (terms0 (Array _t0 (set _t))) )
         (=> true
             (=> (forall ( (x _t0) )
                         (=> (elem@@_t0 x r1)
                             (= (select terms x) (select terms0 x))))
                 (= (qunion@@_t0@@_t r1 terms)
                    (qunion@@_t0@@_t r1 terms0)))))
 (forall ( (s1 (set _t))
           (s2 (set _t)) )
         (=> true
             (= (elem@Open@@set@@_t@Close s2 (pow@@_t s1))
                (subset s2 s1))))
 (= t t_{param})
|----
 (=> (select st t) (not (select st' t)))
    